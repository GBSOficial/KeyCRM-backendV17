import { SystemEmailService } from '../services/systemEmailService';
import { prisma } from '../database/prisma';

async function testSystemEmail() {
  try {
    console.log('üß™ Testando Sistema de Email (via .env)...');
    console.log('========================================');
    
    const systemEmailService = new SystemEmailService();
    
    // 1. Verificar configura√ß√£o
    console.log('\n1. üìã Verificando configura√ß√£o do .env...');
    const configInfo = systemEmailService.getConfigInfo();
    
    console.log(`   ‚úÖ Configurado: ${configInfo.configured ? 'SIM' : 'N√ÉO'}`);
    console.log(`   üè† Host: ${configInfo.host}`);
    console.log(`   üîå Porta: ${configInfo.port}`);
    console.log(`   üë§ Usu√°rio: ${configInfo.user}`);
    console.log(`   üìß Nome: ${configInfo.fromName}`);
    console.log(`   üì¨ Email: ${configInfo.fromEmail}`);
    
    if (!configInfo.configured) {
      console.log('\n‚ùå Sistema n√£o configurado!');
      console.log('\nüìù Para configurar, adicione no arquivo .env:');
      console.log('');
      console.log('# ===== EMAIL DO SISTEMA (Interno) =====');
      console.log('SYSTEM_SMTP_HOST=smtp.gmail.com');
      console.log('SYSTEM_SMTP_PORT=587');
      console.log('SYSTEM_SMTP_SECURE=false');
      console.log('SYSTEM_SMTP_USER=sistema@suaempresa.com');
      console.log('SYSTEM_SMTP_PASS=sua-senha-app');
             console.log('SYSTEM_SMTP_FROM_NAME=TheArc Sistema');
      console.log('SYSTEM_SMTP_FROM_EMAIL=noreply@suaempresa.com');
      console.log('');
      console.log('üí° Para Gmail, use App Password, n√£o a senha normal!');
      return;
    }
    
    // 2. Testar conex√£o
    console.log('\n2. üîó Testando conex√£o SMTP...');
    const connectionTest = await systemEmailService.testConnection();
    
    if (connectionTest.success) {
      console.log(`   ‚úÖ ${connectionTest.message}`);
    } else {
      console.log(`   ‚ùå ${connectionTest.message}`);
      console.log('\nüí° Dicas de troubleshooting:');
      console.log('   - Verifique host e porta');
      console.log('   - Para Gmail: Use App Password');
      console.log('   - Para Outlook: Ative 2FA e use senha de app');
      console.log('   - Verifique firewall/proxy');
      return;
    }
    
    // 3. Buscar usu√°rio de teste
    console.log('\n3. üë§ Buscando usu√°rio de teste...');
    const testUser = await prisma.user.findFirst({
      where: {
        status: 'ACTIVE',
        email: { contains: '@' }
      },
      select: {
        id: true,
        name: true,
        email: true
      }
    });
    
    if (!testUser) {
      console.log('   ‚ùå Nenhum usu√°rio ativo encontrado');
      return;
    }
    
    console.log(`   ‚úÖ Usu√°rio: ${testUser.name} (${testUser.email})`);
    
    // 4. Teste de envio (comentado por seguran√ßa)
    console.log('\n4. üì§ Teste de envio de email...');
    console.log('   ‚ö†Ô∏è  ATEN√á√ÉO: Este seria um envio real!');
    console.log('   üí° Para testar, descomente o c√≥digo abaixo:');
    
    /*
    // DESCOMENTE PARA TESTAR ENVIO REAL:
    console.log('   üì® Enviando email de teste...');
    const emailResult = await systemEmailService.sendPasswordResetEmail({
      userName: testUser.name,
      userEmail: testUser.email,
      tempPassword: 'TESTE123'
    });
    
    console.log(`   ‚úÖ Email enviado! ID: ${emailResult.messageId}`);
    console.log(`   üìß Para: ${testUser.email}`);
    */
    
    console.log('   ‚è∏Ô∏è  Teste pausado por seguran√ßa');
    
    console.log('\n‚úÖ Sistema de Email est√° funcionando!');
    console.log('========================================');
    console.log('üéØ O que voc√™ pode fazer agora:');
    console.log('   1. Resetar senha de usu√°rio via Admin');
    console.log('   2. Email ser√° enviado automaticamente');
    console.log('   3. Usu√°rio receber√° senha tempor√°ria');
    
  } catch (error) {
    const errorMessage = error instanceof Error ? error.message : 'Erro desconhecido';
    console.error('\n‚ùå Erro no teste:', errorMessage);
    
    if (errorMessage.includes('SMTP')) {
      console.log('\nüîß Dicas para resolu√ß√£o:');
      console.log('   - Verifique as credenciais SMTP');
      console.log('   - Para Gmail: Use App Password');
      console.log('   - Para Outlook: Use senha de aplicativo');
      console.log('   - Verifique configura√ß√µes de seguran√ßa');
    }
  } finally {
    await prisma.$disconnect();
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  testSystemEmail();
}

export { testSystemEmail }; 